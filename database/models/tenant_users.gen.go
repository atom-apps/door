// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"

	"gorm.io/gorm"
	"gorm.io/gorm/schema"
)

const TableNameTenantUser = "tenant_users"

// TenantUser mapped from table <tenant_users>
type TenantUser struct {
	ID        int64          `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true" json:"id"`
	CreatedAt time.Time      `gorm:"column:created_at;type:timestamp with time zone" json:"created_at"`
	UpdatedAt time.Time      `gorm:"column:updated_at;type:timestamp with time zone" json:"updated_at"`
	DeletedAt gorm.DeletedAt `gorm:"column:deleted_at;type:timestamp with time zone" json:"deleted_at"`
	TenantID  int64          `gorm:"column:tenant_id;type:bigint" json:"tenant_id"`
	UserID    int64          `gorm:"column:user_id;type:bigint" json:"user_id"`
	IsAdmin   bool           `gorm:"column:is_admin;type:boolean" json:"is_admin"`
}

func (*TenantUser) TableName(namer schema.Namer) string {
	if namer == nil {
		return TableNameTenantUser
	}
	return namer.TableName(TableNameTenantUser)
}
